openapi: 3.0.0
servers:
  - url: http://localhost:8080/api
    description: Order Service API
info:
  description: This API provides functionality for managing orders in the system.
  version: 1.0.0
  title: Order Service API
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: orders
    description: Order operations

paths:
  /orders/{id}:
    get:
      tags:
        - orders
      summary: Get Order By Id
      description: Retrieve order details using order id
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the order
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Order details retrieve successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
        '404':
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /orders:
    post:
      tags:
        - orders
      summary: Add Order
      description: Add order to orders table
      operationId: addOrder
      requestBody:
        description: Add Order details to create a new order
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        '200':
          description: Order Added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Invalid Order inputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /orders/all:
    get:
      tags:
        - orders
      summary: Get All Orders
      description: Retrieve all orders from orders table
      operationId: getAllOrders
      responses:
        '200':
          description: Order details retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'
        '404':
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /orders/update/{id}:
    put:
      tags:
        - orders
      summary: Update Order by ID
      description: Update the details of a order by their unique ID.
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the order.
          schema:
            type: integer
            format: int64
      requestBody:
        description: The updated order details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        '200':
          description: Order updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /orders/remove/{id}:
    delete:
      tags:
        - orders
      summary: Delete order by id
      description: Delete order by their unique id
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the order.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: order deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /orders/user/{id}:
    get:
      tags:
        - orders
      summary: get orders using user id
      description: Retrieve the all orders related user id
      operationId: getOrdersByUserId
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the user.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Order details retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'
        '404':
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'


components:
  schemas:
    OrderDTO:
      type: object
      properties:
        order_id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        product_name:
          type: string
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: decimal
          minimum: 0
      required:
        - order_id
        - product_name
        - quantity
        - price


    Response:
      type: object
      properties:
        responseCode:
          type: string
          description: A short error code to describe the error type.
        message:
          type: string
          description: A detailed message explaining the error.
        timestamp:
          type: string
          format: date-time
          description: The timestamp when the error occurred.
      required:
        - responseCode
        - message
        - timeStamp
        - object